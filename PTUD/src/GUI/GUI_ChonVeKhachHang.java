/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;

import DAO.DAO_ChiTietHoaDon;
import DAO.DAO_ChiTietVe;
import DAO.DAO_Ghe;
import DAO.DAO_HoaDon;
import DAO.DAO_KhachHang;
import DAO.DAO_TrangThaiGhe;
import DAO.DAO_VeMayBay;
import DAO.ExcelFileExportForHoaDon;
import ENTITY.ChiTietHoaDon;
import ENTITY.ChiTietVe;
import ENTITY.Ghe;
import ENTITY.HoaDon;
import ENTITY.KhachHang;
import ENTITY.LichBay;
import ENTITY.LoaiVe;
import ENTITY.NhanVien;
import ENTITY.TrangThaiGhe;
import ENTITY.VeMayBay;
import utilies.ExportPDF;

/**
 *
 * @author ADMIN
 */
public class GUI_ChonVeKhachHang extends javax.swing.JPanel {

	// Bien khac
	private String maVe;
	private NhanVien nv;
	private LoaiVe loaiVe;
	// Dao
	private DAO_VeMayBay dao_veMayBay = new DAO_VeMayBay();
	private DAO_TrangThaiGhe dao_TrangThaiGhe = new DAO_TrangThaiGhe();
	private DAO_KhachHang dao_KhachHang = new DAO_KhachHang();
	private DAO_Ghe dao_Ghe = new DAO_Ghe();
	private DAO_ChiTietVe dao_ChiTietVe = new DAO_ChiTietVe();
	private DAO_HoaDon dao_HoaDon = new DAO_HoaDon();
	private DAO_ChiTietHoaDon dao_ChiTietHoadon = new DAO_ChiTietHoaDon();

	private ExcelFileExportForHoaDon excelFEFF;

	// List
	private ArrayList<KhachHang> listKhachHang;
	private ArrayList<TrangThaiGhe> listTrangThaiGhe;
	private ArrayList<HoaDon> listHoaDon;

	/**
	 * Creates new form GUI_ChonVeKhachHang
	 */
	public GUI_ChonVeKhachHang(String maVe, NhanVien nv, LoaiVe loaiVe) {
		this.maVe = maVe;
		this.nv = nv;
		this.loaiVe = loaiVe;

		listKhachHang = dao_KhachHang.getalltbKhachHang();
		listTrangThaiGhe = dao_TrangThaiGhe.getalltbTrangThaiGhe();
		listHoaDon = dao_HoaDon.getalltbHoaDon();

		initComponents();
		capNhatTrangThaiChoNgoi(maVe);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		jPanel4 = new javax.swing.JPanel();
		jPanel5 = new javax.swing.JPanel();
		jPanel6 = new javax.swing.JPanel();
		jTextField3 = new javax.swing.JTextField();
		jPanel10 = new javax.swing.JPanel();
		jPanel14 = new javax.swing.JPanel();
		jTextField7 = new javax.swing.JTextField();
		jTextField8 = new javax.swing.JTextField();
		jPanel17 = new javax.swing.JPanel();
		panelA = new javax.swing.JPanel();
		panelB = new javax.swing.JPanel();
		jPanel7 = new javax.swing.JPanel();
		jTextField5 = new javax.swing.JTextField();
		jPanel12 = new javax.swing.JPanel();
		jPanel18 = new javax.swing.JPanel();
		jTextField11 = new javax.swing.JTextField();
		jTextField12 = new javax.swing.JTextField();
		jTextField13 = new javax.swing.JTextField();
		jPanel19 = new javax.swing.JPanel();
		panelE = new javax.swing.JPanel();
		panelF = new javax.swing.JPanel();
		panelG = new javax.swing.JPanel();
		jPanel8 = new javax.swing.JPanel();
		jTextField2 = new javax.swing.JTextField();
		jPanel9 = new javax.swing.JPanel();
		jPanel11 = new javax.swing.JPanel();
		jTextField4 = new javax.swing.JTextField();
		jPanel13 = new javax.swing.JPanel();
		jPanel15 = new javax.swing.JPanel();
		jTextField9 = new javax.swing.JTextField();
		jTextField10 = new javax.swing.JTextField();
		jPanel16 = new javax.swing.JPanel();
		panelC = new javax.swing.JPanel();
		panelD = new javax.swing.JPanel();
		jPanel20 = new javax.swing.JPanel();
		jTextField6 = new javax.swing.JTextField();
		jPanel21 = new javax.swing.JPanel();
		jPanel23 = new javax.swing.JPanel();
		jTextField14 = new javax.swing.JTextField();
		jTextField15 = new javax.swing.JTextField();
		jTextField16 = new javax.swing.JTextField();
		jPanel24 = new javax.swing.JPanel();
		panelH = new javax.swing.JPanel();
		panelK = new javax.swing.JPanel();
		panelI = new javax.swing.JPanel();
		jPanel22 = new javax.swing.JPanel();
		jTextField1 = new javax.swing.JTextField();
		jPanel25 = new javax.swing.JPanel();
		jPanel3 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		btnDatLaiChon = new javax.swing.JButton();
		btnDatVe = new javax.swing.JButton();
		btnTimKhachHang = new javax.swing.JButton();
		jtfTimKhachHang = new javax.swing.JTextField();
		jtfTenKhachHang = new javax.swing.JTextField();
		jtfSoLuongNguoi = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jtfGiaTien = new javax.swing.JTextField();
		btnTinhTien = new javax.swing.JButton();

		setBackground(new java.awt.Color(255, 255, 255));
		setLayout(new java.awt.BorderLayout());

		jPanel1.setBackground(new java.awt.Color(0, 255, 204));
		jPanel1.setLayout(new java.awt.BorderLayout());

		jPanel2.setBackground(new java.awt.Color(0, 204, 51));
		jPanel2.setPreferredSize(new java.awt.Dimension(100, 600));
		jPanel2.setLayout(new java.awt.BorderLayout());

		jPanel4.setPreferredSize(new java.awt.Dimension(1200, 210));
		jPanel4.setLayout(new java.awt.BorderLayout());

		jPanel5.setBackground(new java.awt.Color(0, 204, 0));
		jPanel5.setPreferredSize(new java.awt.Dimension(1131, 200));
		jPanel5.setLayout(new java.awt.BorderLayout());

		jPanel6.setBackground(new java.awt.Color(255, 0, 51));
		jPanel6.setPreferredSize(new java.awt.Dimension(100, 200));
		jPanel6.setLayout(new java.awt.BorderLayout());

		jTextField3.setText("Ghế Thương Gia");
		jPanel6.add(jTextField3, java.awt.BorderLayout.PAGE_START);

		jPanel10.setBackground(new java.awt.Color(153, 153, 0));
		jPanel10.setLayout(new java.awt.BorderLayout());

		jPanel14.setLayout(new java.awt.GridLayout(0, 1));

		jTextField7.setText("A");
		jPanel14.add(jTextField7);

		jTextField8.setText("B");
		jPanel14.add(jTextField8);

		jPanel10.add(jPanel14, java.awt.BorderLayout.LINE_START);

		jPanel17.setLayout(new java.awt.GridLayout(0, 1));

		panelA.setLayout(new java.awt.GridLayout(0, 1));
		jPanel17.add(panelA);

		panelB.setLayout(new java.awt.GridLayout(0, 1));
		jPanel17.add(panelB);

		jPanel10.add(jPanel17, java.awt.BorderLayout.CENTER);

		jPanel6.add(jPanel10, java.awt.BorderLayout.CENTER);

		jPanel5.add(jPanel6, java.awt.BorderLayout.LINE_START);

		jPanel7.setBackground(new java.awt.Color(0, 255, 204));
		jPanel7.setLayout(new java.awt.BorderLayout());

		jTextField5.setText("Ghế Phổ Thông");
		jPanel7.add(jTextField5, java.awt.BorderLayout.PAGE_START);

		jPanel12.setBackground(new java.awt.Color(204, 255, 102));
		jPanel12.setLayout(new java.awt.BorderLayout());

		jPanel18.setLayout(new java.awt.GridLayout(0, 1));

		jTextField11.setText("E");
		jPanel18.add(jTextField11);

		jTextField12.setText("F");
		jPanel18.add(jTextField12);

		jTextField13.setText("G");
		jPanel18.add(jTextField13);

		jPanel12.add(jPanel18, java.awt.BorderLayout.LINE_START);

		jPanel19.setLayout(new java.awt.GridLayout(0, 1));

		panelE.setLayout(new java.awt.GridLayout(1, 0));
		jPanel19.add(panelE);

		panelF.setLayout(new java.awt.GridLayout(1, 0));
		jPanel19.add(panelF);

		panelG.setLayout(new java.awt.GridLayout(1, 0));
		jPanel19.add(panelG);

		jPanel12.add(jPanel19, java.awt.BorderLayout.CENTER);

		jPanel7.add(jPanel12, java.awt.BorderLayout.CENTER);

		jPanel5.add(jPanel7, java.awt.BorderLayout.CENTER);

		jPanel4.add(jPanel5, java.awt.BorderLayout.PAGE_START);

		jPanel8.setBackground(new java.awt.Color(255, 255, 255));
		jPanel8.setPreferredSize(new java.awt.Dimension(1131, 80));
		jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));

		jTextField2.setText("ĐƯỜNG ĐI ");
		jTextField2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
		jPanel8.add(jTextField2);

		jPanel4.add(jPanel8, java.awt.BorderLayout.CENTER);

		jPanel9.setBackground(new java.awt.Color(0, 255, 153));
		jPanel9.setPreferredSize(new java.awt.Dimension(1131, 210));
		jPanel9.setLayout(new java.awt.BorderLayout());

		jPanel11.setBackground(new java.awt.Color(255, 0, 0));
		jPanel11.setPreferredSize(new java.awt.Dimension(100, 200));
		jPanel11.setLayout(new java.awt.BorderLayout());

		jTextField4.setText("Ghế Thương Gia");
		jPanel11.add(jTextField4, java.awt.BorderLayout.PAGE_START);

		jPanel13.setBackground(new java.awt.Color(204, 204, 0));
		jPanel13.setPreferredSize(new java.awt.Dimension(100, 92));
		jPanel13.setLayout(new java.awt.BorderLayout());

		jPanel15.setLayout(new java.awt.GridLayout(0, 1));

		jTextField9.setText("C");
		jPanel15.add(jTextField9);

		jTextField10.setText("D");
		jPanel15.add(jTextField10);

		jPanel13.add(jPanel15, java.awt.BorderLayout.LINE_START);

		jPanel16.setLayout(new java.awt.GridLayout(0, 1));

		panelC.setLayout(new java.awt.GridLayout(0, 1));
		jPanel16.add(panelC);

		panelD.setLayout(new java.awt.GridLayout(0, 1));
		jPanel16.add(panelD);

		jPanel13.add(jPanel16, java.awt.BorderLayout.CENTER);

		jPanel11.add(jPanel13, java.awt.BorderLayout.CENTER);

		jPanel9.add(jPanel11, java.awt.BorderLayout.LINE_START);

		jPanel20.setBackground(new java.awt.Color(0, 255, 204));
		jPanel20.setLayout(new java.awt.BorderLayout());

		jTextField6.setText("Ghế Phổ Thông");
		jPanel20.add(jTextField6, java.awt.BorderLayout.PAGE_START);

		jPanel21.setLayout(new java.awt.BorderLayout());

		jPanel23.setLayout(new java.awt.GridLayout(0, 1));

		jTextField14.setText("H");
		jPanel23.add(jTextField14);

		jTextField15.setText("K");
		jPanel23.add(jTextField15);

		jTextField16.setText("I");
		jPanel23.add(jTextField16);

		jPanel21.add(jPanel23, java.awt.BorderLayout.LINE_START);

		jPanel24.setLayout(new java.awt.GridLayout(0, 1));

		panelH.setLayout(new java.awt.GridLayout(1, 0));
		jPanel24.add(panelH);

		panelK.setLayout(new java.awt.GridLayout(1, 0));
		jPanel24.add(panelK);

		panelI.setLayout(new java.awt.GridLayout(1, 0));
		jPanel24.add(panelI);

		jPanel21.add(jPanel24, java.awt.BorderLayout.CENTER);

		jPanel20.add(jPanel21, java.awt.BorderLayout.CENTER);

		jPanel9.add(jPanel20, java.awt.BorderLayout.CENTER);

		jPanel4.add(jPanel9, java.awt.BorderLayout.PAGE_END);

		jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

		jPanel22.setLayout(new java.awt.BorderLayout());

		jTextField1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
		jTextField1.setForeground(new java.awt.Color(21, 115, 135));
		jTextField1.setText("Chọn chỗ ngồi ");
		jTextField1.setPreferredSize(new java.awt.Dimension(145, 40));
		jPanel22.add(jTextField1, java.awt.BorderLayout.CENTER);
		jPanel22.add(jPanel25, java.awt.BorderLayout.LINE_END);

		jPanel2.add(jPanel22, java.awt.BorderLayout.PAGE_START);

		jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

		jPanel3.setBackground(new java.awt.Color(255, 255, 255));

		jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(21, 115, 135));
		jLabel1.setText("Tên Khách Hàng");

		btnDatLaiChon.setBackground(new java.awt.Color(21, 115, 135));
		btnDatLaiChon.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
		btnDatLaiChon.setForeground(new java.awt.Color(255, 255, 255));
		btnDatLaiChon.setText("Đặt Lại");
		btnDatLaiChon.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDatLaiChonActionPerformed(evt);
			}
		});

		btnDatVe.setBackground(new java.awt.Color(21, 115, 135));
		btnDatVe.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
		btnDatVe.setForeground(new java.awt.Color(255, 255, 255));
		btnDatVe.setText("Đặt Vé");
		btnDatVe.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDatVeActionPerformed(evt);
			}
		});

		btnTimKhachHang.setBackground(new java.awt.Color(21, 115, 135));
		btnTimKhachHang.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
		btnTimKhachHang.setForeground(new java.awt.Color(255, 255, 255));
		btnTimKhachHang.setText("Tìm Khách Hàng");
		btnTimKhachHang.setMargin(new java.awt.Insets(0, 0, 0, 0));
		btnTimKhachHang.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTimKhachHangActionPerformed(evt);
			}
		});

		jtfTimKhachHang.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
		jtfTimKhachHang.setPreferredSize(new java.awt.Dimension(302, 60));

		jtfTenKhachHang.setEditable(false);

		jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
		jLabel2.setForeground(new java.awt.Color(21, 115, 135));
		jLabel2.setText("Số Lượng Ghế Đặt");

		jLabel3.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
		jLabel3.setForeground(new java.awt.Color(255, 51, 51));
		jLabel3.setText("Giá");

		jtfGiaTien.setEditable(false);
		jtfGiaTien.setForeground(new java.awt.Color(255, 51, 51));
		jtfGiaTien.setPreferredSize(new java.awt.Dimension(302, 60));

		btnTinhTien.setBackground(new java.awt.Color(21, 115, 135));
		btnTinhTien.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
		btnTinhTien.setForeground(new java.awt.Color(255, 255, 255));
		btnTinhTien.setText("Tính Tiền");
		btnTinhTien.setMargin(new java.awt.Insets(0, 0, 0, 0));
		btnTinhTien.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTinhTienActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
						.addGap(42, 42, 42)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(btnTimKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, 132,
										Short.MAX_VALUE)
								.addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGap(27, 27, 27)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jtfTenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 302,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jtfTimKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 302,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(20, 20, 20)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel2).addComponent(jLabel3))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(jtfSoLuongNguoi, javax.swing.GroupLayout.PREFERRED_SIZE, 302,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(jPanel3Layout.createSequentialGroup()
										.addComponent(jtfGiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 193,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(btnTinhTien, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(btnDatVe, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(btnDatLaiChon, javax.swing.GroupLayout.DEFAULT_SIZE, 302,
										Short.MAX_VALUE))
						.addGap(23, 23, 23)));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel3Layout.createSequentialGroup().addGap(24, 24, 24)
								.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(btnDatLaiChon, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel1).addComponent(jtfTenKhachHang,
												javax.swing.GroupLayout.PREFERRED_SIZE, 60,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGroup(jPanel3Layout.createSequentialGroup().addGap(25, 25, 25)
								.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jtfSoLuongNguoi, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel2))))
						.addGap(18, 18, 18)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(btnDatVe, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jtfTimKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 58,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel3).addComponent(jtfGiaTien,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addComponent(btnTimKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(btnTinhTien, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addContainerGap(61, Short.MAX_VALUE)));

		jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

		add(jPanel1, java.awt.BorderLayout.CENTER);
	}// </editor-fold>//GEN-END:initComponents

	private void btnTinhTienActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTinhTienActionPerformed
		VeMayBay ve = dao_veMayBay.getOneObjVeMayBay(maVe);
		String soLuongText = jtfSoLuongNguoi.getText().trim();
		int soLuongNguoi;
		try {
			soLuongNguoi = Integer.parseInt(soLuongText); // Chuyển đổi từ chuỗi sang số nguyên
			if (soLuongNguoi <= 0) {
				throw new NumberFormatException(); // Nếu số lượng <= 0, coi như lỗi
			}
		} catch (NumberFormatException e) {
			jtfGiaTien.setText(null);
			JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng người hợp lệ (một số nguyên dương).", "Lỗi",
					JOptionPane.ERROR_MESSAGE);
			return; // Kết thúc hàm nếu không hợp lệ
		}
		double tienKhachTra = soLuongNguoi * ve.getGia();
		jtfGiaTien.setText("" + tienKhachTra);
	}// GEN-LAST:event_btnTinhTienActionPerformed

	private void btnDatLaiChonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDatLaiChonActionPerformed
		// Danh sách các panel cần kiểm tra
		JPanel[] panels = { panelA, panelB, panelC, panelD, panelE, panelF, panelH, panelG, panelK, panelI };

		// Duyệt qua tất cả các panel
		for (JPanel panel : panels) {
			Component[] components = panel.getComponents(); // Lấy tất cả các thành phần trong panel hiện tại
			for (Component component : components) {
				if (component instanceof JButton) { // Kiểm tra nếu là JButton
					JButton button = (JButton) component;
					button.setBackground(UIManager.getColor("Button.background")); // Đặt lại màu nền mặc định
				}
			}
		}

	}// GEN-LAST:event_btnDatLaiChonActionPerformed

	private void btnDatVeActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDatVeActionPerformed
		// Kiểm tra xem `jtfTenKhachHang` có giá trị hợp lệ hay không

		VeMayBay vmb = dao_veMayBay.getOneObjVeMayBay(maVe);
		ArrayList<ChiTietVe> chiTietVeIn = new ArrayList<ChiTietVe>();
		
		String tenKhachHang = jtfTenKhachHang.getText().trim();
		if (tenKhachHang.isEmpty()) {
			JOptionPane.showMessageDialog(this, "Vui lòng nhập tên khách hàng.", "Lỗi", JOptionPane.ERROR_MESSAGE);
			return; // Kết thúc nếu tên khách hàng không hợp lệ
		}

		KhachHang kh = dao_KhachHang.getOneObjKhachHangTheoSoDienThoai(jtfTimKhachHang.getText());

		// Danh sách các panel cần kiểm tra
		JPanel[] panels = { panelA, panelB, panelC, panelD, panelE, panelF, panelH, panelG, panelK, panelI };
		List<String> selectedSeats = new ArrayList<>(); // Danh sách ghế được chọn

		// Kiểm tra xem `jtfSoLuongNguoi` có phải là một số hợp lệ không
		String soLuongText = jtfSoLuongNguoi.getText().trim();
		int soLuongNguoi;
		try {
			soLuongNguoi = Integer.parseInt(soLuongText); // Chuyển đổi từ chuỗi sang số nguyên
			if (soLuongNguoi <= 0) {
				throw new NumberFormatException(); // Nếu số lượng <= 0, coi như lỗi
			}
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng người hợp lệ (một số nguyên dương).", "Lỗi",
					JOptionPane.ERROR_MESSAGE);
			return; // Kết thúc hàm nếu không hợp lệ
		}

		// Lặp qua từng panel để lấy danh sách ghế được chọn
		for (JPanel panel : panels) {
			Component[] components = panel.getComponents(); // Lấy tất cả các thành phần trong panel hiện tại
			for (Component component : components) {
				if (component instanceof JButton) {
					JButton button = (JButton) component;
					if (button.getBackground() == Color.LIGHT_GRAY) { // Kiểm tra nếu button đã được chọn
						selectedSeats.add(button.getActionCommand()); // Lấy action command để biết ghế nào
					}
				}
			}
		}

		// Kiểm tra số lượng ghế được chọn có phù hợp với số lượng người không
		if (selectedSeats.size() > soLuongNguoi) {
			JOptionPane.showMessageDialog(this, "Số lượng ghế được chọn (" + selectedSeats.size()
					+ ") nhiều hơn số lượng người (" + soLuongNguoi + "). Vui lòng chọn lại.", "Cảnh báo",
					JOptionPane.WARNING_MESSAGE);
		} else if (selectedSeats.size() < soLuongNguoi) {
			JOptionPane.showMessageDialog(this, "Số lượng ghế được chọn (" + selectedSeats.size()
					+ ") ít hơn số lượng người (" + soLuongNguoi + "). Vui lòng chọn thêm.", "Cảnh báo",
					JOptionPane.WARNING_MESSAGE);
		} else {
			for (String pro : selectedSeats) {
				// Chuyển đổi chuỗi theo định dạng yêu cầu
				String gheDinhDang = dinhDangGhe(pro);

				listTrangThaiGhe = dao_TrangThaiGhe.getalltbTrangThaiGhe();
				int soLuongTrangThaiGhe = listTrangThaiGhe.size();

				Ghe ghe = dao_Ghe.getOneObjGhe(gheDinhDang); // Truyền giá trị đã định dạng vào hàm
				LichBay lb = vmb.getMaLichBay();

				TrangThaiGhe ttg = new TrangThaiGhe("TTG00" + (soLuongTrangThaiGhe + 1), ghe, lb, true);
				ChiTietVe ctv = new ChiTietVe(ttg, loaiVe, kh, nv);

				if (dao_TrangThaiGhe.themTrangThaiGhe(ttg) && dao_ChiTietVe.themChiTietVe(ctv)) {
					System.out.println("Thêm ChiTietVe và TrangThaiGhe Thành Công");
					chiTietVeIn.add(ctv); 
					// Tìm JButton tương ứng và set trạng thái
					for (JPanel panel : panels) {
						Component[] components = panel.getComponents();
						for (Component component : components) {
							if (component instanceof JButton) {
								JButton button = (JButton) component;
								if (button.getActionCommand().equals(pro)) { // Kiểm tra ghế tương ứng
									button.setEnabled(false); // Vô hiệu hóa nút
									button.setBackground(UIManager.getColor("Button.background"));
									break; // Dừng kiểm tra các nút trong panel này
								}
							}
						}
					}
				} else {
					System.out.println("Thêm Thất Bại");
				}
			}
			double giaHoaDon = vmb.getGia() * selectedSeats.size();
			int soHoaDonMoi = listHoaDon.size() + 1;
			String maHoaDon = "HD00" + soHoaDonMoi;

			HoaDon hd = new HoaDon(maHoaDon, kh, selectedSeats.size(), giaHoaDon, true);
			ChiTietHoaDon cthd = new ChiTietHoaDon(hd, vmb, nv, giaHoaDon, LocalDateTime.now());

			double tongTien = 100.0; // Giả sử tổng tiền là 100 (CTHĐ.getTongTien())
			double number = 0; // Biến lưu số tiền khách nhập

			// Vòng lặp yêu cầu người dùng nhập số tiền cho đến khi hợp lệ
			while (true) {
				String input = JOptionPane.showInputDialog("Nhập tiền khách đưa: ");

				try {
					// Chuyển đổi giá trị nhập vào thành double
					number = Double.parseDouble(input);

					// Kiểm tra nếu số tiền nhập vào hợp lệ (lớn hơn hoặc bằng tổng tiền)
					if (number < tongTien) {
						JOptionPane.showMessageDialog(null, "Số tiền bạn nhập không đủ, vui lòng nhập lại.");
					} else {
						// Tiến hành các thao tác nếu số tiền hợp lệ
						JOptionPane.showMessageDialog(null, "Số tiền hợp lệ. Đang xử lý...");

						// Giả sử dao_HoaDon và dao_ChiTietHoadon là các đối tượng để thao tác với cơ sở
						// dữ liệu
						
						boolean hoaDonThanhCong = dao_HoaDon.themHoaDon(hd);
						boolean chiTietHoaDonThanhCong = dao_ChiTietHoadon.themChiTietHoaDon(cthd);

						if (hoaDonThanhCong && chiTietHoaDonThanhCong) {
							System.out.println("Thêm hóa đơn thành công");
							System.out.println("Thêm chi tiết hóa đơn thành công");
						} else {
							System.out.println("Thêm hóa đơn thất bại");
							System.out.println("Thêm chi tiết hóa đơn thất bại");
						}
						
						GUI_InVe gui_InVe = new GUI_InVe(chiTietVeIn, "VE001");
						gui_InVe.setVisible(true);
						ExportPDF inve = new ExportPDF(); 
						inve.exportToPDF(gui_InVe, "E:\\output_gui_in_ve.pdf");
						gui_InVe.setVisible(false);
						
						excelFEFF = new ExcelFileExportForHoaDon(cthd, number, number - cthd.getTongTien());
						// Nếu các thao tác thành công, thoát khỏi vòng lặp
						break;
					}

				} catch (NumberFormatException e) {
					// Xử lý khi người dùng nhập không phải là số thực hợp lệ
					JOptionPane.showMessageDialog(null, "Vui lòng nhập một số thực hợp lệ.");
				}
			}

		}
	}// GEN-LAST:event_btnDatVeActionPerformed

	private void btnTimKhachHangActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTimKhachHangActionPerformed
		// Lấy số điện thoại từ JTextField jtfTimKhachHang
		String soDienThoai = jtfTimKhachHang.getText().trim();

		// Kiểm tra nếu số điện thoại không rỗng
		if (soDienThoai.isEmpty()) {
			JOptionPane.showMessageDialog(this, "Vui lòng nhập số điện thoại!", "Thông báo",
					JOptionPane.WARNING_MESSAGE);
			return;
		}

		// Tìm kiếm khách hàng trong danh sách
		String tenKhachHang = null;
		for (KhachHang khachHang : listKhachHang) {
			if (khachHang.getSoDienThoai().equals(soDienThoai)) {
				tenKhachHang = khachHang.getTenKhachHang();
			}
		}

		// Kiểm tra kết quả tìm kiếm
		if (tenKhachHang != null) {
			// Hiển thị tên khách hàng lên JTextField jtfTenKhachHang
			jtfTenKhachHang.setText(tenKhachHang);
		} else {
			// Hiển thị thông báo không tìm thấy
			JOptionPane.showMessageDialog(this, "Không tìm thấy khách hàng với số điện thoại này!", "Thông báo",
					JOptionPane.INFORMATION_MESSAGE);
			jtfTenKhachHang.setText(""); // Xóa dữ liệu cũ (nếu có)
		}
	}// GEN-LAST:event_btnTimKhachHangActionPerformed

	private String dinhDangGhe(String pro) {
		// Tách phần ký tự và phần số
		String kyTu = pro.substring(0, 1); // Lấy ký tự đầu (A, B, G, ...)
		int so = Integer.parseInt(pro.substring(1)); // Lấy phần số và chuyển sang số nguyên

		// Định dạng phần số với 3 chữ số
		String soDinhDang = String.format("%03d", so);

		// Kết hợp ký tự với phần số đã định dạng
		return kyTu + soDinhDang;
	}

	private void addButtonsToPanelA(String maVe) {
		VeMayBay vmb = dao_veMayBay.getOneObjVeMayBay(maVe);
		String tenHang = "A";
		for (int i = 1; i <= 2; i++) {
			JButton button = new JButton("" + i); // Tạo button với tên
			button.setFont(new Font("Arial", Font.PLAIN, 8));
			button.setMargin(new Insets(0, 0, 0, 0));
			button.setActionCommand(tenHang + i); // Đặt action command để dễ nhận diện

			// Gắn ActionListener cho button
			button.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println("Bạn đã chọn ghế: " + e.getActionCommand());
					button.setBackground(Color.LIGHT_GRAY); // Đổi màu để thể hiện trạng thái
				}
			});

			for (TrangThaiGhe ttg : dao_TrangThaiGhe.getalltbTrangThaiGhe()) {
				String maGhe = ttg.getMaGhe().getMaGhe();
				String firstChar = maGhe.substring(0, 1); // Lấy ký tự đầu tiên
				String soGhe = maGhe.substring(1); // Bỏ ký tự đầu tiên
				int so = Integer.parseInt(soGhe); // Chuyển sang số nguyên nếu cần
				if (vmb.getMaLichBay().equals(ttg.getMaLichBay()) && so == i && firstChar.equals(tenHang)
						&& ttg.isTrangThai()) {
					button.setEnabled(false);
				}
			}
			panelA.add(button); // Thêm button vào panel
		}

	}

	private void addButtonsToPanelB(String maVe) {
		VeMayBay vmb = dao_veMayBay.getOneObjVeMayBay(maVe);
		String tenHang = "B";
		for (int i = 1; i <= 2; i++) {
			JButton button = new JButton("" + i); // Tạo button với tên
			button.setFont(new Font("Arial", Font.PLAIN, 8));
			button.setMargin(new Insets(0, 0, 0, 0));
			button.setActionCommand(tenHang + i); // Đặt action command để dễ nhận diện

			// Gắn ActionListener cho button
			button.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println("Bạn đã chọn ghế: " + e.getActionCommand());
					button.setBackground(Color.LIGHT_GRAY); // Đổi màu để thể hiện trạng thái
				}
			});

			for (TrangThaiGhe ttg : dao_TrangThaiGhe.getalltbTrangThaiGhe()) {
				String maGhe = ttg.getMaGhe().getMaGhe();
				String firstChar = maGhe.substring(0, 1); // Lấy ký tự đầu tiên
				String soGhe = maGhe.substring(1); // Bỏ ký tự đầu tiên
				int so = Integer.parseInt(soGhe); // Chuyển sang số nguyên nếu cần
				if (vmb.getMaLichBay().equals(ttg.getMaLichBay()) && so == i && firstChar.equals(tenHang)
						&& ttg.isTrangThai()) {
					button.setEnabled(false);
				}
			}
			panelB.add(button); // Thêm button vào panel
		}

	}

	private void addButtonsToPanelC(String maVe) {
		VeMayBay vmb = dao_veMayBay.getOneObjVeMayBay(maVe);
		String tenHang = "C";
		for (int i = 1; i <= 2; i++) {
			JButton button = new JButton("" + i); // Tạo button với tên
			button.setFont(new Font("Arial", Font.PLAIN, 8));
			button.setMargin(new Insets(0, 0, 0, 0));
			button.setActionCommand(tenHang + i); // Đặt action command để dễ nhận diện

			// Gắn ActionListener cho button
			button.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println("Bạn đã chọn ghế: " + e.getActionCommand());
					button.setBackground(Color.LIGHT_GRAY); // Đổi màu để thể hiện trạng thái
				}
			});

			for (TrangThaiGhe ttg : dao_TrangThaiGhe.getalltbTrangThaiGhe()) {
				String maGhe = ttg.getMaGhe().getMaGhe();
				String firstChar = maGhe.substring(0, 1); // Lấy ký tự đầu tiên
				String soGhe = maGhe.substring(1); // Bỏ ký tự đầu tiên
				int so = Integer.parseInt(soGhe); // Chuyển sang số nguyên nếu cần
				if (vmb.getMaLichBay().equals(ttg.getMaLichBay()) && so == i && firstChar.equals(tenHang)
						&& ttg.isTrangThai()) {
					button.setEnabled(false);
				}
			}
			panelC.add(button); // Thêm button vào panel
		}

	}

	private void addButtonsToPanelD(String maVe) {
		VeMayBay vmb = dao_veMayBay.getOneObjVeMayBay(maVe);
		String tenHang = "D";
		for (int i = 1; i <= 2; i++) {
			JButton button = new JButton("" + i); // Tạo button với tên
			button.setFont(new Font("Arial", Font.PLAIN, 8));
			button.setMargin(new Insets(0, 0, 0, 0));
			button.setActionCommand(tenHang + i); // Đặt action command để dễ nhận diện

			// Gắn ActionListener cho button
			button.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println("Bạn đã chọn ghế: " + e.getActionCommand());
					button.setBackground(Color.LIGHT_GRAY); // Đổi màu để thể hiện trạng thái
				}
			});

			for (TrangThaiGhe ttg : dao_TrangThaiGhe.getalltbTrangThaiGhe()) {
				String maGhe = ttg.getMaGhe().getMaGhe();
				String firstChar = maGhe.substring(0, 1); // Lấy ký tự đầu tiên
				String soGhe = maGhe.substring(1); // Bỏ ký tự đầu tiên
				int so = Integer.parseInt(soGhe); // Chuyển sang số nguyên nếu cần
				if (vmb.getMaLichBay().equals(ttg.getMaLichBay()) && so == i && firstChar.equals(tenHang)
						&& ttg.isTrangThai()) {
					button.setEnabled(false);
				}
			}
			panelD.add(button); // Thêm button vào panel
		}

	}

	private void addButtonsToPanelE(String maVe) {
		VeMayBay vmb = dao_veMayBay.getOneObjVeMayBay(maVe);
		String tenHang = "E";
		for (int i = 1; i <= 30; i++) {
			JButton button = new JButton("" + i); // Tạo button với tên
			button.setFont(new Font("Arial", Font.PLAIN, 8));
			button.setMargin(new Insets(0, 0, 0, 0));
			button.setActionCommand(tenHang + i); // Đặt action command để dễ nhận diện

			// Gắn ActionListener cho button
			button.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println("Bạn đã chọn ghế: " + e.getActionCommand());
					button.setBackground(Color.LIGHT_GRAY); // Đổi màu để thể hiện trạng thái
				}
			});

			for (TrangThaiGhe ttg : dao_TrangThaiGhe.getalltbTrangThaiGhe()) {
				String maGhe = ttg.getMaGhe().getMaGhe();
				String firstChar = maGhe.substring(0, 1); // Lấy ký tự đầu tiên
				String soGhe = maGhe.substring(1); // Bỏ ký tự đầu tiên
				int so = Integer.parseInt(soGhe); // Chuyển sang số nguyên nếu cần
				if (vmb.getMaLichBay().equals(ttg.getMaLichBay()) && so == i && firstChar.equals(tenHang)
						&& ttg.isTrangThai()) {
					button.setEnabled(false);
				}
			}
			panelE.add(button); // Thêm button vào panel
		}

	}

	private void addButtonsToPanelF(String maVe) {
		VeMayBay vmb = dao_veMayBay.getOneObjVeMayBay(maVe);
		String tenHang = "F";
		for (int i = 1; i <= 30; i++) {
			JButton button = new JButton("" + i); // Tạo button với tên
			button.setFont(new Font("Arial", Font.PLAIN, 8));
			button.setMargin(new Insets(0, 0, 0, 0));
			button.setActionCommand(tenHang + i); // Đặt action command để dễ nhận diện

			// Gắn ActionListener cho button
			button.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println("Bạn đã chọn ghế: " + e.getActionCommand());
					button.setBackground(Color.LIGHT_GRAY); // Đổi màu để thể hiện trạng thái
				}
			});

			for (TrangThaiGhe ttg : dao_TrangThaiGhe.getalltbTrangThaiGhe()) {
				String maGhe = ttg.getMaGhe().getMaGhe();
				String firstChar = maGhe.substring(0, 1); // Lấy ký tự đầu tiên
				String soGhe = maGhe.substring(1); // Bỏ ký tự đầu tiên
				int so = Integer.parseInt(soGhe); // Chuyển sang số nguyên nếu cần
				if (vmb.getMaLichBay().equals(ttg.getMaLichBay()) && so == i && firstChar.equals(tenHang)
						&& ttg.isTrangThai()) {
					button.setEnabled(false);
				}
			}
			panelF.add(button); // Thêm button vào panel
		}

	}

	private void addButtonsToPanelG(String maVe) {
		VeMayBay vmb = dao_veMayBay.getOneObjVeMayBay(maVe);
		String tenHang = "G";
		for (int i = 1; i <= 30; i++) {
			JButton button = new JButton("" + i); // Tạo button với tên
			button.setFont(new Font("Arial", Font.PLAIN, 8));
			button.setMargin(new Insets(0, 0, 0, 0));
			button.setActionCommand(tenHang + i); // Đặt action command để dễ nhận diện

			// Gắn ActionListener cho button
			button.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println("Bạn đã chọn ghế: " + e.getActionCommand());
					button.setBackground(Color.LIGHT_GRAY); // Đổi màu để thể hiện trạng thái
				}
			});

			for (TrangThaiGhe ttg : dao_TrangThaiGhe.getalltbTrangThaiGhe()) {
				String maGhe = ttg.getMaGhe().getMaGhe();
				String firstChar = maGhe.substring(0, 1); // Lấy ký tự đầu tiên
				String soGhe = maGhe.substring(1); // Bỏ ký tự đầu tiên
				int so = Integer.parseInt(soGhe); // Chuyển sang số nguyên nếu cần
				if (vmb.getMaLichBay().equals(ttg.getMaLichBay()) && so == i && firstChar.equals(tenHang)
						&& ttg.isTrangThai()) {
					button.setEnabled(false);
				}
			}
			panelG.add(button); // Thêm button vào panel
		}

	}

	private void addButtonsToPanelH(String maVe) {
		VeMayBay vmb = dao_veMayBay.getOneObjVeMayBay(maVe);
		String tenHang = "H";
		for (int i = 1; i <= 30; i++) {
			JButton button = new JButton("" + i); // Tạo button với tên
			button.setFont(new Font("Arial", Font.PLAIN, 8));
			button.setMargin(new Insets(0, 0, 0, 0));
			button.setActionCommand(tenHang + i); // Đặt action command để dễ nhận diện

			// Gắn ActionListener cho button
			button.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println("Bạn đã chọn ghế: " + e.getActionCommand());
					button.setBackground(Color.LIGHT_GRAY); // Đổi màu để thể hiện trạng thái
				}
			});

			for (TrangThaiGhe ttg : dao_TrangThaiGhe.getalltbTrangThaiGhe()) {
				String maGhe = ttg.getMaGhe().getMaGhe();
				String firstChar = maGhe.substring(0, 1); // Lấy ký tự đầu tiên
				String soGhe = maGhe.substring(1); // Bỏ ký tự đầu tiên
				int so = Integer.parseInt(soGhe); // Chuyển sang số nguyên nếu cần
				if (vmb.getMaLichBay().equals(ttg.getMaLichBay()) && so == i && firstChar.equals(tenHang)
						&& ttg.isTrangThai()) {
					button.setEnabled(false);
				}
			}
			panelH.add(button); // Thêm button vào panel
		}

	}

	private void addButtonsToPanelK(String maVe) {
		VeMayBay vmb = dao_veMayBay.getOneObjVeMayBay(maVe);
		String tenHang = "K";
		for (int i = 1; i <= 30; i++) {
			JButton button = new JButton("" + i); // Tạo button với tên
			button.setFont(new Font("Arial", Font.PLAIN, 8));
			button.setMargin(new Insets(0, 0, 0, 0));
			button.setActionCommand(tenHang + i); // Đặt action command để dễ nhận diện

			// Gắn ActionListener cho button
			button.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println("Bạn đã chọn ghế: " + e.getActionCommand());
					button.setBackground(Color.LIGHT_GRAY); // Đổi màu để thể hiện trạng thái
				}
			});

			for (TrangThaiGhe ttg : dao_TrangThaiGhe.getalltbTrangThaiGhe()) {
				String maGhe = ttg.getMaGhe().getMaGhe();
				String firstChar = maGhe.substring(0, 1); // Lấy ký tự đầu tiên
				String soGhe = maGhe.substring(1); // Bỏ ký tự đầu tiên
				int so = Integer.parseInt(soGhe); // Chuyển sang số nguyên nếu cần
				if (vmb.getMaLichBay().equals(ttg.getMaLichBay()) && so == i && firstChar.equals(tenHang)
						&& ttg.isTrangThai()) {
					button.setEnabled(false);
				}
			}
			panelK.add(button); // Thêm button vào panel
		}
	}

	private void addButtonsToPanelI(String maVe) {
		VeMayBay vmb = dao_veMayBay.getOneObjVeMayBay(maVe);
		String tenHang = "I";
		for (int i = 1; i <= 30; i++) {
			JButton button = new JButton("" + i); // Tạo button với tên
			button.setFont(new Font("Arial", Font.PLAIN, 8));
			button.setMargin(new Insets(0, 0, 0, 0));
			button.setActionCommand(tenHang + i); // Đặt action command để dễ nhận diện

			// Gắn ActionListener cho button
			button.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					System.out.println("Bạn đã chọn ghế: " + e.getActionCommand());
					button.setBackground(Color.LIGHT_GRAY); // Đổi màu để thể hiện trạng thái
				}
			});

			for (TrangThaiGhe ttg : dao_TrangThaiGhe.getalltbTrangThaiGhe()) {
				String maGhe = ttg.getMaGhe().getMaGhe();
				String firstChar = maGhe.substring(0, 1); // Lấy ký tự đầu tiên
				String soGhe = maGhe.substring(1); // Bỏ ký tự đầu tiên
				int so = Integer.parseInt(soGhe); // Chuyển sang số nguyên nếu cần
				if (vmb.getMaLichBay().equals(ttg.getMaLichBay()) && so == i && firstChar.equals(tenHang)
						&& ttg.isTrangThai()) {
					button.setEnabled(false);
				}
			}
			panelI.add(button); // Thêm button vào panel
		}

	}

	private void capNhatTrangThaiChoNgoi(String maVe) {
		addButtonsToPanelA(maVe);
		addButtonsToPanelB(maVe);
		addButtonsToPanelC(maVe);
		addButtonsToPanelD(maVe);

		addButtonsToPanelE(maVe);
		addButtonsToPanelF(maVe);
		addButtonsToPanelG(maVe);
		addButtonsToPanelH(maVe);
		addButtonsToPanelK(maVe);
		addButtonsToPanelI(maVe);
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnDatLaiChon;
	private javax.swing.JButton btnDatVe;
	private javax.swing.JButton btnTimKhachHang;
	private javax.swing.JButton btnTinhTien;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel10;
	private javax.swing.JPanel jPanel11;
	private javax.swing.JPanel jPanel12;
	private javax.swing.JPanel jPanel13;
	private javax.swing.JPanel jPanel14;
	private javax.swing.JPanel jPanel15;
	private javax.swing.JPanel jPanel16;
	private javax.swing.JPanel jPanel17;
	private javax.swing.JPanel jPanel18;
	private javax.swing.JPanel jPanel19;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel20;
	private javax.swing.JPanel jPanel21;
	private javax.swing.JPanel jPanel22;
	private javax.swing.JPanel jPanel23;
	private javax.swing.JPanel jPanel24;
	private javax.swing.JPanel jPanel25;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JPanel jPanel6;
	private javax.swing.JPanel jPanel7;
	private javax.swing.JPanel jPanel8;
	private javax.swing.JPanel jPanel9;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JTextField jTextField10;
	private javax.swing.JTextField jTextField11;
	private javax.swing.JTextField jTextField12;
	private javax.swing.JTextField jTextField13;
	private javax.swing.JTextField jTextField14;
	private javax.swing.JTextField jTextField15;
	private javax.swing.JTextField jTextField16;
	private javax.swing.JTextField jTextField2;
	private javax.swing.JTextField jTextField3;
	private javax.swing.JTextField jTextField4;
	private javax.swing.JTextField jTextField5;
	private javax.swing.JTextField jTextField6;
	private javax.swing.JTextField jTextField7;
	private javax.swing.JTextField jTextField8;
	private javax.swing.JTextField jTextField9;
	private javax.swing.JTextField jtfGiaTien;
	private javax.swing.JTextField jtfSoLuongNguoi;
	private javax.swing.JTextField jtfTenKhachHang;
	private javax.swing.JTextField jtfTimKhachHang;
	private javax.swing.JPanel panelA;
	private javax.swing.JPanel panelB;
	private javax.swing.JPanel panelC;
	private javax.swing.JPanel panelD;
	private javax.swing.JPanel panelE;
	private javax.swing.JPanel panelF;
	private javax.swing.JPanel panelG;
	private javax.swing.JPanel panelH;
	private javax.swing.JPanel panelI;
	private javax.swing.JPanel panelK;
	// End of variables declaration//GEN-END:variables
}
